webpackHotUpdate("vektora-lb",{

/***/ "./packages/lb/src/components/product/product.js":
/*!*******************************************************!*\
  !*** ./packages/lb/src/components/product/product.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _typography_text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typography/text */ \"./packages/lb/src/components/typography/text.js\");\n/* harmony import */ var _typography_main_tag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../typography/main-tag */ \"./packages/lb/src/components/typography/main-tag.js\");\n/* harmony import */ var _queries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../queries */ \"./packages/lb/src/components/queries.js\");\n/* harmony import */ var _home_review_home__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../home/review-home */ \"./packages/lb/src/components/home/review-home.js\");\n/* harmony import */ var _other_divider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../other/divider */ \"./packages/lb/src/components/other/divider.js\");\n/* harmony import */ var _sidebar_nav__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../sidebar-nav */ \"./packages/lb/src/components/sidebar-nav.js\");\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../card */ \"./packages/lb/src/components/card.js\");\n/* harmony import */ var _typography_headline__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../typography/headline */ \"./packages/lb/src/components/typography/headline.js\");\n/* harmony import */ var _typography_dot__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../typography/dot */ \"./packages/lb/src/components/typography/dot.js\");\n/* harmony import */ var _contianer_small_container__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../contianer/small-container */ \"./packages/lb/src/components/contianer/small-container.js\");\n/* harmony import */ var _typography_decor_title__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../typography/decor-title */ \"./packages/lb/src/components/typography/decor-title.js\");\n/* harmony import */ var _progress__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../progress */ \"./packages/lb/src/components/progress.js\");\n/* harmony import */ var _breadcrumbs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../breadcrumbs */ \"./packages/lb/src/components/breadcrumbs.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const Product=()=>{return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_sidebar_nav__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(MainRight,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(\"div\",{className:\"container\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(\"section\",{className:\"section\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(_contianer_small_container__WEBPACK_IMPORTED_MODULE_10__[\"SmallContainer\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_breadcrumbs__WEBPACK_IMPORTED_MODULE_13__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(_typography_decor_title__WEBPACK_IMPORTED_MODULE_11__[\"DecorTitle\"],{children:[\"World of warCraft \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_dot__WEBPACK_IMPORTED_MODULE_9__[\"Dot\"],{children:\"Character Boosting\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Body1\"],{children:[\"Lol Boosting provides cheap WoW boosting of all types: character or PvP boosting, raid or dungeons carry, Powerleveling, farming & many more to save your time. Book a slot in our live chat and enjoy WoW boost!\",\" \"]})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(\"section\",{className:\"section\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_main_tag__WEBPACK_IMPORTED_MODULE_2__[\"MainTag\"],{children:\"Rare and limited\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Heading2\"],{children:\"Today\\u2019s Special Offers\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(Column3,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(\"section\",{className:\"section\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_main_tag__WEBPACK_IMPORTED_MODULE_2__[\"MainTag\"],{children:\"Get it first\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Heading2\"],{children:\"Limited editions\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(Column3,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(\"section\",{className:\"section\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_main_tag__WEBPACK_IMPORTED_MODULE_2__[\"MainTag\"],{children:\"According to your search\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Heading2\"],{children:\"Special for your account\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(Column3,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_card__WEBPACK_IMPORTED_MODULE_7__[\"Cards\"],{})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_other_divider__WEBPACK_IMPORTED_MODULE_5__[\"Divider\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(_contianer_small_container__WEBPACK_IMPORTED_MODULE_10__[\"SmallContainer\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(ProductBody,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Heading4\"],{children:\"Product description\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(DescWrap,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(Desc,{children:\"The last boss of every raid in WoW is usually very difficult to defeat even in Normal mode. However, with proper gear and an experienced team, it is more than real. To defeat Sylvanas Windrunner you need to get through 3 phases and bring Sylvanas health down to 50%. At mythic difficulty SoD Sylvanas Windrunner kill will be counted at 45% of her health.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(Desc,{children:\"The first phase is a DPS and brain check for most of the teams. Deal damage, reset stacks with Sylvanas arrows, and simply don\\u2019t die. However, most of the random LFG raids stack right there.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(Desc,{children:\"The next stop is phase 2. A lot of running at narrow bridges with holes and a bit of push-back mechanics. The pre-last platform can become a wall for a lot of players. You need a lot of DPS, raid saves, and sprints to reach this platform ASAP.\"})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(ProductBody,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Heading4\"],{children:\"are There so many things to do in character boosting?\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsxs\"])(DescWrap,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(Desc,{children:\"You are only limited by your imagination. And making your wishes come true is our goal in boosting. PvP boost exists from the very beginning of WoW. This aspect of the game can have very cool and unique PvP rewards but most of the time getting them is quite complicated, especially if you are not that much into PvP culture and don't have many skills in this area.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(Desc,{children:\"And here comes the boosting and Overgear. We only work with the very best PvP players and gladiators in WoW. All of them have a huge background in PvP boosting and WoW PvP boosts are part of their life already and there is no one in this world better than them in that case.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(Desc,{children:\"The next stop is phase 2. A lot of running at narrow bridges with holes and a bit of push-back mechanics. The pre-last platform can become a wall for a lot of players. You need a lot of DPS, raid saves, and sprints to reach this platform ASAP.\"})]})]})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__[\"jsx\"])(_home_review_home__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{})]})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_0__[\"connect\"])(Product));const MainRight=Object(frontity__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", false?undefined:{target:\"emgcm9d4\",label:\"MainRight\"})(\"width:100%;@media \",_queries__WEBPACK_IMPORTED_MODULE_3__[\"device\"].laptop,\"{width:calc(100% - 375px);margin-left:375px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const Column3=Object(frontity__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", false?undefined:{target:\"emgcm9d3\",label:\"Column3\"})(\"display:flex;overflow:scroll;gap:30px;margin-top:40px;@media \",_queries__WEBPACK_IMPORTED_MODULE_3__[\"device\"].tablet,\"{display:grid;grid-template-columns:repeat(2, 1fr);overflow:unset;}@media \",_queries__WEBPACK_IMPORTED_MODULE_3__[\"device\"].laptop,\"{display:grid;grid-template-columns:repeat(3, 1fr);overflow:unset;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const ProductBody=Object(frontity__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", false?undefined:{target:\"emgcm9d2\",label:\"ProductBody\"})( false?undefined:{name:\"1huv1ah\",styles:\"margin-top:60px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const DescWrap=Object(frontity__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", false?undefined:{target:\"emgcm9d1\",label:\"DescWrap\"})( false?undefined:{name:\"iqoq9n\",styles:\"margin-top:20px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Desc=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(_typography_text__WEBPACK_IMPORTED_MODULE_1__[\"Body1\"], false?undefined:{target:\"emgcm9d0\",label:\"Desc\"})( false?undefined:{name:\"o9omvx\",styles:\"margin-top:10px;color:#6E7687\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/lb/src/components/product/product.js\n");

/***/ })

})